<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.ProdMapper">

	<!-- 규칙성을 설정하기 위한 Map result에 설정한 프로퍼티가 setter로 바뀜 -->
	<!-- resultMap 사용하는방법 -->
	<resultMap type="kr.or.ddit.vo.ProdVO" id="pordMap" autoMapping="true">
		<!-- 중첩맵 사용! 맵안에 맵 -->
		<association property="buyer" javaType="kr.or.ddit.vo.BuyerVO" autoMapping="true" />		
		<association property="lprod" javaType="kr.or.ddit.vo.LprodVO" autoMapping="true" />
	</resultMap>
	
	<sql id="fromFrag">
		  FROM PROD NATURAL JOIN LPROD
         	   NATURAL JOIN BUYER
    </sql>
    
    <sql id="searchFrag">
		<where>
			<if test="simpleSearch.searchWord != null and !simpleSearch.searchWord.isEmpty()">
				<choose>
					<when test="simpleSearch.searchType == 'buyer'">
						INSTR(BUYER_NAME , #{simpleSearch.searchWord}) > 0
					</when>
					<when test="simpleSearch.searchType == 'name'">
						INSTR(PROD_NAME , #{simpleSearch.searchWord}) > 0
					</when>
					<otherwise>
						INSTR(BUYER_NAME , #{simpleSearch.searchWord}) > 0
						OR
						INSTR(PROD_NAME , #{simpleSearch.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>
	
	<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(*)
		<include refid="fromFrag" />
      	<include refid="searchFrag" />
	</select>
	<select id="selectProdList" resultMap="pordMap">
	SELECT A.*
	FROM( 
		SELECT
		  ROWNUM RNUM
	      , PROD_ID
	      , PROD_NAME
	      , BUYER_ID
	      , LPROD_GU
	      , PROD_PRICE
	      , PROD_COST
	      , PROD_OUTLINE
	      , LPROD_NAME
	      , BUYER_NAME
	      , BUYER_ADD1
      <include refid="fromFrag" />
      <include refid="searchFrag" />
      ) A
      <![CDATA[
      	WHERE RNUM >=#{firstRecordIndex} AND RNUM <=#{lastRecordindex}
      ]]>
	</select>
	
	
	<select id="selectProdListForMap" resultType="hashMap">
		SELECT
      PROD_ID
      , PROD_NAME
      , BUYER_ID
      , LPROD_GU
      , PROD_PRICE
      , PROD_COST
      , PROD_OUTLINE
      , LPROD_NAME
      , BUYER_NAME
      , BUYER_ADD1
      FROM PROD NATURAL JOIN LPROD
         NATURAL JOIN BUYER
	</select>
	
	<select id="selectProd" resultMap="pordMap">
		SELECT
			PROD_ID
			, PROD_NAME
			, LPROD_GU
			, BUYER_ID
			, PROD_COST
			, PROD_PRICE
			, PROD_SALE
			, PROD_OUTLINE
			, PROD_DETAIL
			, PROD_IMG
			, PROD_TOTALSTOCK
			, PROD_INSDATE
			, PROD_PROPERSTOCK
			, PROD_SIZE
			, PROD_COLOR
			, PROD_DELIVERY
			, PROD_UNIT
			, PROD_QTYIN
			, PROD_QTYSALE
			, PROD_MILEAGE
			, PROD_TOTALSTOCK
			, PROD_INSDATE
			, PROD_PROPERSTOCK
			, PROD_QTYIN
			, PROD_QTYSALE
	      , LPROD_NAME
	      , BUYER_NAME
	      , BUYER_ADD1
	      , BUYER_COMTEL
		  , BUYER_CHARGER
      FROM PROD NATURAL JOIN LPROD
       			NATURAL JOIN BUYER
	 WHERE PROD_ID = #{PROD_ID}		
	</select>
	
	<!-- 데이터 매퍼  -->
	<insert id="insertProd">
	<!-- order: 순서지정  -->
	<selectKey resultType="string" keyProperty="prodId" order="BEFORE">
		SELECT 
		    #{lprodGu}||
		    LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), LENGTH(#{lprodGu})+1)),0) + 1, 6, '0')
		  FROM PROD
		  WHERE LPROD_GU=#{lprodGu}
	</selectKey>
      INSERT INTO PROD(
         PROD_ID
         , PROD_NAME
         , LPROD_GU
         , BUYER_ID
         , PROD_COST
         , PROD_PRICE
         , PROD_SALE
         , PROD_OUTLINE
         , PROD_DETAIL
         , PROD_IMG
         , PROD_TOTALSTOCK
         , PROD_INSDATE
         , PROD_PROPERSTOCK
         , PROD_SIZE
         , PROD_COLOR
         , PROD_DELIVERY
         , PROD_UNIT
         , PROD_QTYIN
         , PROD_QTYSALE
         , PROD_MILEAGE
      )
      VALUES(
          #{prodId}
         , #{prodName}
         , #{lprodGu}
         , #{buyerId}
         , #{prodCost}
         , #{prodPrice, jdbcType=NUMERIC}
         , #{prodSale, jdbcType=NUMERIC}
         , #{prodOutline}
         , #{prodDetail, jdbcType=CLOB}
         , #{prodImg, jdbcType=VARCHAR}
         , #{prodTotalstock, jdbcType=NUMERIC}
         , sysdate
         , #{prodProperstock, jdbcType=NUMERIC}
         , #{prodSize, jdbcType=VARCHAR}
         , #{prodColor, jdbcType=VARCHAR}
         , #{prodDelivery, jdbcType=VARCHAR}
         , #{prodUnit, jdbcType=VARCHAR}
         , #{prodQtyin, jdbcType=NUMERIC}
         , #{prodQtysale, jdbcType=NUMERIC}
         , #{prodMileage, jdbcType=NUMERIC}
      )
   </insert>
	<update id="updateProd">
		UPDATE PROD
		SET	LPROD_GU = #{lprodGu},
			BUYER_ID = #{buyerId},
			PROD_COST = #{prodCost,jdbcType=NUMERIC},
			PROD_PRICE = #{prodPrice,jdbcType=NUMERIC},
			PROD_SALE = #{prodSale,jdbcType=NUMERIC},
			PROD_OUTLINE = #{prodOutline,jdbcType=VARCHAR},
			PROD_DETAIL = #{prodDetail,jdbcType=CLOB},
			PROD_IMG = #{prodImg,jdbcType=VARCHAR},
			PROD_TOTALSTOCK = #{prodTotalstock,jdbcType=NUMERIC},
			PROD_PROPERSTOCK = #{prodProperstock,jdbcType=NUMERIC},
			PROD_SIZE = #{prodSize,jdbcType=VARCHAR},
			PROD_COLOR = #{prodColor,jdbcType=VARCHAR},
			PROD_DELIVERY = #{prodDelivery,jdbcType=VARCHAR},
			PROD_UNIT = #{prodUnit,jdbcType=VARCHAR},
			PROD_QTYIN = #{prodQtyin,jdbcType=NUMERIC},
			PROD_QTYSALE = #{prodQtysale,jdbcType=NUMERIC},
			PROD_MILEAGE = #{prodMileage,jdbcType=NUMERIC}
		WHERE PROD_ID=#{prodId}
	</update>
			<!-- PROD_INSDATE = sysdate, -->
</mapper>