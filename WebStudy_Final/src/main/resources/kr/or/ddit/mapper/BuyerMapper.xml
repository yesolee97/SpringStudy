<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.BuyerMapper">
<resultMap type="BuyerVO" id="BuyerMap" autoMapping="true" >

	<!-- 1:n 관계를 바인딩할때는 1에대해서 중복을 제거할 pk키ㅣ 코드는 남겨놔야한다! -->
	<id property="buyerId" column="BUYER_ID"/>

	<association property="lprod" javaType="LprodVO" autoMapping="true" />
	<collection property="prodList" javaType="list" ofType="ProdVO">
		  <id property="prodId" column="PROD_ID"/>
	      <result property="prodName" column="PROD_NAME" />
	      <result property="prodCost" column="PROD_COST" />
	      <result property="prodPrice" column="PROD_PRICE" />
	</collection>
</resultMap>

	<select id="selectBuyerList" resultMap="BuyerMap">
	<!-- WITH BUYERVIEW AS(
	    SELECT 
	        BUYER_ID
	        , BUYER_NAME
	        , BUYER_BANK
	        , BUYER_ADD1
	        , BUYER_COMTEL
	        , BUYER_CHARGER
	        , LPROD_NAME
	      FROM BUYER B LEFT OUTER JOIN LPROD L ON (B.LPROD_GU=L.LPROD_GU)
	)
	SELECT 
	    BUYERVIEW.*
	    , COUNT(P.PROD_NAME) AS PROD_NAME
	FROM BUYERVIEW INNER JOIN PROD P ON (BUYERVIEW.BUYER_ID=P.BUYER_ID)
	GROUP BY 
	    BUYERVIEW.BUYER_ID,
	    BUYERVIEW.BUYER_NAME,
	    BUYERVIEW.BUYER_BANK,
	    BUYERVIEW.BUYER_ADD1,
	    BUYERVIEW.BUYER_COMTEL,
	    BUYERVIEW.BUYER_CHARGER,
	    BUYERVIEW.LPROD_NAME -->
		WITH BUYERVIEW AS(
			SELECT 
				BUYER_ID
				, BUYER_NAME
				, LPROD_GU
				, BUYER_BANK
				, BUYER_ADD1
				, BUYER_COMTEL
				, BUYER_CHARGER
				, LPROD_NAME
			  FROM BUYER NATURAL JOIN LPROD
		)
		SELECT 
			BUYERVIEW.*
			, PROD_ID
			, PROD_NAME
			, PROD_COST
			, PROD_PRICE			
		  FROM BUYERVIEW LEFT OUTER JOIN PROD ON (BUYERVIEW.BUYER_ID=PROD.BUYER_ID)
	</select>
	
	<select id="selectBuyer" resultMap="BuyerMap">
		WITH BUYERVIEW AS(
			SELECT 
				BUYER_ID
				, BUYER_NAME
				, LPROD_GU
				, BUYER_BANK
				, BUYER_BANKNO
				, BUYER_BANKNAME
				, BUYER_ZIP
				, BUYER_ADD1
				, BUYER_ADD2
				, BUYER_COMTEL
				, BUYER_FAX
				, BUYER_MAIL
				, BUYER_CHARGER
				, BUYER_TELEXT
				, LPROD_NAME
				, BUYER_IMG
			  FROM BUYER NATURAL JOIN LPROD
			 WHERE BUYER_ID=#{BUYERID}
		)
		SELECT 
			BUYERVIEW.*
			, PROD_ID
			, PROD_NAME
			, PROD_COST
			, PROD_PRICE			
		  FROM BUYERVIEW LEFT OUTER JOIN PROD ON (BUYERVIEW.BUYER_ID=PROD.BUYER_ID)
	</select>
	
	<!-- OGNL 문법 >> 연산자 사용 시 사용되는 문법 -->
	<!-- <if test="buyerImg != null"></if> -->
	<insert id="insertBuyer">
		<!-- order: 순서지정  -->
		<selectKey resultType="string" keyProperty="buyerId" order="BEFORE">
			SELECT 
			    #{lprodGu}||
			    LPAD(NVL(TO_NUMBER(SUBSTR(MAX(BUYER_ID), LENGTH(#{lprodGu})+1)),0) + 1, 2, '0')
			  FROM BUYER
			  WHERE LPROD_GU=#{lprodGu}
		</selectKey>
		 INSERT INTO buyer (
		    buyer_id,
		    buyer_name,
		    lprod_gu,
		    buyer_bank,
		    buyer_bankno,
		    buyer_bankname,
		    buyer_zip,
		    buyer_add1,
		    buyer_add2,
		    buyer_comtel,
		    buyer_fax,
		    buyer_mail,
		    buyer_charger,
		    buyer_telext
		    <if test="buyerImg != null">
		    	, BUYER_IMG
		    </if>
		) VALUES (
			#{buyerId},
			#{buyerName},
			#{lprodGu},
			#{buyerBank},
			#{buyerBankno},
			#{buyerBankname},
			#{buyerZip},
			#{buyerAdd1},
			#{buyerAdd2},
			#{buyerComtel},
			#{buyerFax},
			#{buyerMail},
			#{buyerCharger},
			#{buyerTelext}
		    <if test="buyerImg neq null">
				, #{buyerImg}
			</if>
		)
	</insert>
	
	
	<update id="updateBuyer">
		UPDATE BUYER
		SET 
			BUYER_BANK = #{buyerBank}
			, BUYER_BANKNO = #{buyerBankno}
			, BUYER_BANKNAME = #{buyerBankname}
			, BUYER_ZIP = #{buyerZip}
			, BUYER_ADD1 = #{buyerAdd1}
			, BUYER_ADD2 = #{buyerAdd2}
			, BUYER_COMTEL = #{buyerComtel}
			, BUYER_FAX = #{buyerFax}
			, BUYER_MAIL = #{buyerMail}
			, BUYER_CHARGER = #{buyerCharger}
			, BUYER_TELEXT = #{buyerTelext}
		    <if test="buyerImg != null">
		    	, BUYER_IMG = #{buyerImg}
		    </if>
		WHERE BUYER_ID=#{buyerId}
	</update>
</mapper>