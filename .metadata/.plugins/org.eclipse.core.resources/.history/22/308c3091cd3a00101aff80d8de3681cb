package kr.or.ddit.case03.conf;

import org.springframework.context.annotation.Bean;

import lombok.extern.slf4j.Slf4j;

/**
 * 스프링 컨테이너의 빈 관리 특성
 * 1. 싱글턴 scope를 기본으로 사용함.
 * 	* Design Pattern (singleton): 어플리케이션 실행 중 힙 메모리 상에 특정 클래스의 인스턴스가 하나만 로딩되는 구조
 * 								  즉, 싱글턴 대상 = 클래스
 * 	: 싱글턴 스코프의 대상을 등록된 빈을 기준으로 측정함. > 즉, 같은 메소드를 몇번 주입받던 하나로 퉁침
 * 2. 
 */

@Slf4j
public class Case03ContainerBeaManagementPolicyConfig {
	@Bean
	public StringBuffer sb1() {
		log.info("sb1 팩토리 메소드 실행: ");
		return new StringBuffer();
	}
	@Bean
	public StringBuffer sb2() {
		log.info("sb1 팩토리 메소드 실행: ");
		return new StringBuffer();
	}
}
