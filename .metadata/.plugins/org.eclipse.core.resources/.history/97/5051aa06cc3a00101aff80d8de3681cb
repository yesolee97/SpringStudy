package kr.or.ddit.case03;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import kr.or.ddit.case02.conf.Case02DependencyInjectionConfig;
import kr.or.ddit.case02.objs.dao.Case02DAO;
import kr.or.ddit.case02.objs.service.Case02Service;
import lombok.extern.slf4j.Slf4j;


/**
 *  메소드를 파라미터로 주입받는 방법까지만 봤음!
 */
@Slf4j
public class Case02Playground {
	public static void main(String[] args) {
		// 다오랑 서비스 주입받기
		ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(Case02DependencyInjectionConfig.class);
		
		// 종료를 감지하는 데몬 스레드를 돌리겠다 (어플리케이션이 종료도는 시점을 확인 > 이게 확인되면 알아서 어플리케이션을 종료하겠다)
		// context.registerShutdownHook();
		
		Case02Service service = context.getBean(Case02Service.class);
		Case02DAO dao = context.getBean(Case02DAO.class);
		
		log.info("service: {}", service);
		log.info("dao: {}", dao);
	}
}
