package kr.or.ddit.case04.conf;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Lazy;

import kr.or.ddit.case04.objs.controller.Case04DummyController;
import kr.or.ddit.case04.objs.mapper.Case04DummyMapper;
import kr.or.ddit.case04.objs.mapper.Case04DummyMapperImpl_Oracle;
import kr.or.ddit.case04.objs.service.Case04DummyService;
import kr.or.ddit.case04.objs.service.Case04ServiceImpl;


/**
 * 어플리케이션의 볼륨이 커지면,
 * 특정 패키지(*)에 있는
 * 일정 조건(*)에 맞는 클래스를 자동으로 빈 등록 할 수 있는 방법이 필요함
 * ↓ 의미를 전달해주기 위해서 어노테이션을 분리해서 작성해줘야함
 * @Component: 특정 레이어가 아닌 일반 객체 등록 ex) validate
 * @Repository: 퍼시스턴스 레이어에 사용
 * @Service: 비즈니스 로직 레이어에 사용
 * @Controller: 컨트롤러 레이어에 사용
 * @Configuration - 설정파일 역할을 하는 클래스에 사용
 */
@Configuration
@ComponentScan(basePackages = "kr.or.ddit.case04.objs", lazyInit = true)
@Lazy
public class Case04ComponontScanConfig {
	// 필요한 모든 객체를 빈으로 등록.
//	
//	@Bean
//	public Case04DummyMapper Case04DummyMapperImpl_Oracle() {
//		Case04DummyMapper mapper = new Case04DummyMapperImpl_Oracle();
//		return mapper;
//	}
//	
//	@Bean(initMethod = "start")
//	public Case04DummyService Case04ServiceImpl(Case04DummyMapper mapper) {
//		Case04DummyService service = new Case04ServiceImpl(mapper);
//		return service;
//	}
//	
//	@Bean(initMethod = "start")
//	public Case04DummyController Case04DummyController(Case04DummyService service) {
//		Case04DummyController controller = new Case04DummyController();
//		controller.setService(service);
//		return controller;
//	}
}
